<body>
  <!-- Sidenav -->
  <%- include('../partials/sidebar') %>
  <!-- Main content -->
  <div class="main-content">
    <!-- Top navbar -->
    <%- include('../partials/navbar') %>
    <!-- Header -->
    <%- include('../partials/header') %>
    <!-- Page content -->
    <div class="container-fluid mt--7">
      <div class="row">
        <div class="col-xl-8 mb-5 mb-xl-0">
          <div class="card bg-gradient-default shadow">
            <div class="card-header bg-transparent">
              <div class="row align-items-center">
                <div class="col">
                  <h6 class="text-uppercase text-light ls-1 mb-1">Résumé</h6>
                  <h2 class="text-white mb-0">Simulation</h2>
                </div>
              </div>
            </div>
            <div class="card-body">
              <!-- Chart -->
              <div class="chart">
                <!-- Chart wrapper -->
                <canvas id="chart-simulation" class="chart-canvas"></canvas>
              </div>
            </div>
          </div>
        </div>
        <div class="col-xl-4">
          <div class="card shadow">
            <div class="card-header bg-transparent">
              <div class="row align-items-center">
                <div class="col">
                  <h6 class="text-uppercase text-muted ls-1 mb-1">Performance</h6>
                  <h2 class="mb-0">Total orders</h2>
                </div>
              </div>
            </div>
            <div class="card-body">
              <!-- Chart -->
              <div class="chart">
                <canvas id="chart-orders" class="chart-canvas"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Footer -->
      <%- include('../partials/footer') %>
    </div>
  </div>
  <!-- Include scripts -->
  <%- include('../partials/scripts') %>
  <script>
    function formatData(data){
      var toReturn = {
        dead: [],
        healthy: [],
        imune: [],
        sick: [],
        label: []
      }
      data.forEach((data, index) => {
        toReturn.dead.push(data.d)
        toReturn.healthy.push(data.h)
        toReturn.imune.push(data.i)
        toReturn.sick.push(data.s)
        toReturn.label.push(index)
      });
      return toReturn;
    }

    function generateChart(chart, label, dead, healthy, imune, sick){
      document.getElementById("total-mort").innerHTML = dead[dead.length-1];
      document.getElementById("total-malade").innerHTML = Math.max.apply(null, sick);
      document.getElementById("total-imune").innerHTML = Math.max.apply(null, imune);
      document.getElementById("total-healthy").innerHTML = healthy[healthy.length-1];
      new Chart(chart, {
        type: 'line',
        options: {
          elements: {
            point:{
              radius: 0
            }
          },
          borderWidth: 5,
          tension: 0.3,
          tooltips: {
            callbacks: {
              label: function(item, data) {
                var label = data.datasets[item.datasetIndex].label || '';
                var yLabel = item.yLabel;
                var content = '';
                if (data.datasets.length > 1) {
                  content += label;
                }
                content += yLabel;
                return content;
              }
            }
          }
        },
        data: {
          labels: label,
          datasets: [
                  {
                    label: 'Mort',
                    data: dead,
                    borderColor: "red",
                    backgroundColor: "red"
                  },
                  {
                    label: 'En bonne santé',
                    data: healthy,
                    borderColor: "green",
                    backgroundColor: "green"
                  },
                  {
                    label: 'Immunisé',
                    data: imune,
                    borderColor: "blue",
                    backgroundColor: "blue"
                  },
                  {
                    label: 'Malade',
                    data: sick,
                    borderColor: "yellow",
                    backgroundColor: "yellow"
                  }
          ],
        }
      });
    }
    const socket = io();

    socket.on("simulation-result", (data) => {
      var data = formatData(data);
      generateChart(document.getElementById("chart-simulation"), data.label, data.dead, data.healthy, data.imune, data.sick)
    });

    socket.on("connect", () => {
      socket.emit("run-simulation", [
        {
          "width":1000,
          "height":1000,
          "nbEntities":500,
          "nbSick":10,
          "maxDays":365,
          "probInf":0.25,
          "probImm":0.05,
          "probDea":0.01,
          "infRad":1.5
        },
        {
          "dateMesure":10,
          "typeMesure":"masque"
        },
        {
          "dateMesure":20,
          "typeMesure":"distanciation"
        },
        {
          "dateMesure":30,
          "typeMesure":"confinement"
        }
      ]);
    })
  </script>
</body>
